@model IEnumerable<PokemonDB_MVC.Models.PokemonTbl>

@{
    ViewBag.Title = "Pokédex";

    string format = "000";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<img class="pokeball-index" src="~/Images/pokeball.svg" />
<section class="main-section">
    <div class="filter-container">


        @using (Html.BeginForm())
        {
            <div class="searchbar">
                <strong>Find Pokémon by name: </strong>@Html.TextBox("searchPokemon",@*new { placeholder = "Search Pokémon" })*@null, new { @class = "search" })
                <input type="submit" value="Go!" />
            </div>
        }

        @using (Html.BeginForm())
        {
            <div class="search-container">
                <strong>Type:</strong> @Html.DropDownList("searchType", null, new { @class = "search" })
                <input type="submit" value="Go!" />
            </div>
        }

        <div class="order-container">
            <p>
                @Html.ActionLink("Order by Pokédex No", "Index", new { sortOrder = ViewBag.NumberSortParm }, new { @class = "order-links" })
            </p>
            <p>@Html.ActionLink("|Order by Name", "Index", new { sortOrder = ViewBag.NameSortParm }, new { @class = "order-links" })</p>
        </div>


    </div>


    <div class="poke-container">
        @foreach (var item in Model)

        {
            <div class="pokemon">
                <div class="img-container">
                    @if (item.Image != null)
                    {
                        var imgAs64 = Convert.ToBase64String(item.Image);
                        var imgAsGif = string.Format("data:image/gif; base64, {0}", imgAs64);
                        <a href='@Url.Action("Details", "PokemonTbls", new { id = item.PokedexNo })'>
                            <img src="@imgAsGif" />
                        </a>
                    }

                </div>
                <div class="info">

                    <span class="number">
                        @{
                            string paramaterValue = item.PokedexNo.ToString(format);
                        }
                        #@Html.DisplayFor(modelItem => paramaterValue)
                    </span>
                    <h3 class="name">
                        @Html.ActionLink(item.PokemonName, "Details", new { id = item.PokedexNo }, new { @class = "name" })
                    </h3>
                    <div class="type">
                        <span>
                            @Html.DisplayFor(modelItem => item.Type1)
                        </span>
                    </div>
                    <div class="type">
                        <span>
                            @Html.DisplayFor(modelItem => item.Type2)
                        </span>
                    </div>

                </div>
            </div>
        }
    </div>
</section>



@*jQuery to make the type element not appear for Pokemon with no second type*@

<script>
    $('.type').each(function () {
        if (!$(this).text().trim().length) {
            $(this).css('display', 'none');
        }
    });
</script>



<script>
    // Change the background color of the Pokemon type icons based on their types
    $(document).ready(function () {
        $('.type').each(function () {
            if (!$(this).text().trim().length) {
                $(this).hide();
            }
        });

        let types = ['Normal', 'Fighting', 'Flying', 'Poison', 'Ground', 'Rock', 'Bug', 'Ghost', 'Steel',
            'Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Ice', 'Dragon', 'Dark', 'Fairy'];

        let colors = ['#9099a1', '#ce4069', '#92aade', '#ab6ac8', '#d97746', '#c7b78b', '#90c12c', '#5269ac', '#5a8ea1',
            '#ff9c54', '#4d90d5', '#63bb5b', '#f3d23b', '#f97176', '#74cec0', '#096dc4', '#5a5366', '#ec8fe6'];

        for (let i = 0; i < types.length; i++) {
            $(".type span:contains('" + types[i] + "')").addClass(types[i]).css('background-color', colors[i]);
        }
    });
</script>


<script>
    let sidebar = document.querySelector(".sidebar");
    let closeBtn = document.querySelector("#btn");
    let searchBtn = document.querySelector(".bx-search");

    closeBtn.addEventListener("click", () => {
        sidebar.classList.toggle("open");
        menuBtnChange();//calling the function(optional)
    });

    searchBtn.addEventListener("click", () => { // Sidebar open when you click on the search icon
        sidebar.classList.toggle("open");
        menuBtnChange(); //calling the function(optional)
    });

    // following are the code to change sidebar button(optional)
    function menuBtnChange() {
        if (sidebar.classList.contains("open")) {
            closeBtn.classList.replace("bx-menu", "bx-menu-alt-right");//replacing the icons class
        } else {
            closeBtn.classList.replace("bx-menu-alt-right", "bx-menu");//replacing the icons class
        }
    }
</script>
